{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","border","length","showAlert","newText","toUpperCase","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","btoa","atob","e","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","About","borderRadius","Alert","alert","word","lower","charAt","slice","capitalize","App","Mode","setMode","setAlert","message","setTimeout","body","fontFamily","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mOAIe,SAASA,EAAOC,GAC7B,OACE,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeE,GAAG,IAAlC,SACGH,EAAMI,QAET,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOE,GAAG,IAAzD,oBAIF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,SACGH,EAAMO,iBAeb,sBAAKN,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,QAA7D,SAAd,UACE,uBACED,UAAU,mBACVI,KAAK,WACLG,KAAK,SACLF,GAAG,yBACHG,QAAST,EAAMU,aAEjB,uBAAOT,UAAU,mBAAmBU,QAAQ,yBAA5C,yCCnDG,SAASC,EAASZ,GAC/B,IA0GA,EAAwBa,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OAEE,qCACE,sBAAKd,UAAU,iBAAiBe,MAAO,CAACC,MAAoB,UAAbjB,EAAME,KAAe,QAAQ,SAA5E,UACE,6BAAMF,EAAMkB,UACZ,qBAAKjB,UAAU,OAAf,SACE,0BACEA,UAAU,oBACVK,GAAG,QACHa,KAAK,KACLC,MAAON,EACPO,SAlGa,SAACC,GAEtBP,EAAQO,EAAMC,OAAOH,QAiGbJ,MAAO,CAACQ,gBAA8B,UAAbxB,EAAME,KAAe,UAAU,UAAWe,MAAoB,UAAbjB,EAAME,KAAe,UAAU,QAASuB,OAAqB,UAAbzB,EAAME,KAAe,oBAAoB,yBAIvK,wBAAQD,UAAU,kBAAkBQ,QA3HpB,WAGpB,GAAiB,IAAdK,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,eAEvD,CACE,IAAIC,EAAUd,EAAKe,cACnBd,EAAQa,GACR5B,EAAM2B,UAAU,0BAA0B,aAmHxC,kCAGA,wBAAQ1B,UAAU,uBAAuBQ,QAnHzB,WAEpB,GAAiB,IAAdK,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,eACnD,CACJ,IAAIC,EAAUd,EAAKgB,cACnBf,EAAQa,GACR5B,EAAM2B,UAAU,0BAA0B,aA6GtC,kCAGA,wBAAQ1B,UAAU,mBAAmBQ,QArFlB,WACvB,GAAiB,IAAdK,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,eACnD,CACJ,IAAIC,EAAUd,EAAKiB,MAAM,QACzBhB,EAAQa,EAAQI,KAAK,MACrBhC,EAAM2B,UAAU,wBAAwB,aAgFpC,iCAGA,wBAAQ1B,UAAU,uBAAuBQ,QA3G3B,WACD,IAAdK,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,YAEvDZ,EAAQ,IACRf,EAAM2B,UAAU,gBAAgB,aAuG5B,wBAGA,wBAAQ1B,UAAU,kBAAkBQ,QAtGvB,WAEjB,IAAIK,EAAOmB,SAASC,eAAe,SAClB,IAAdpB,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,YAEvDb,EAAKqB,SACLC,UAAUC,UAAUC,UAAUxB,EAAKM,OACnCpB,EAAM2B,UAAU,uBAAuB,aA+FnC,uBAGA,wBAAQ1B,UAAU,uBAAuBQ,QArFxB,WACrB,GAAiB,IAAdK,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,eAEvD,CACE,IAAIC,EAAUW,KAAKzB,GACnBC,EAAQa,GACR5B,EAAM2B,UAAU,qBAAqB,aA+EnC,8BAGA,wBAAQ1B,UAAU,kBAAkBQ,QA7EnB,WACrB,GAAiB,IAAdK,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,gBAGrD,IACE,IAAIC,EAAUY,KAAK1B,GACrBC,EAAQa,GACR5B,EAAM2B,UAAU,kBAAkB,WAElC,MAAMc,GACJzC,EAAM2B,UAAU,0BAA0B,aAmE1C,2BAGA,wBAAQ1B,UAAU,uBAAuBQ,QAhE1B,WAKnB,GAAiB,IAAdK,EAAKY,OAAY1B,EAAM2B,UAAU,mBAAmB,eACnD,CACJ,IAAIe,EAAM,IAAIC,yBAAyB7B,GACvC8B,OAAOC,gBAAgBC,MAAMJ,KAwDzB,uBAKF,sBAAKzC,UAAU,iBAAiBe,MAAO,CAACC,MAAoB,UAAbjB,EAAME,KAAe,QAAQ,SAA5E,UACE,mDACA,8BACGY,EAAKiB,MAAM,KAAKL,OADnB,cACsCZ,EAAKY,OAD3C,iBAGA,8BAAI,KAAQZ,EAAKiB,MAAM,KAAKL,OAA5B,mBACA,yCACA,mBAAGzB,UAAU,OAAb,SAAqBa,EAAKY,OAAO,EAAEZ,EAAK,mEC9JjC,SAASiC,EAAM/C,GAQ5B,OAJEiC,SAAS7B,MAAQ,oBAKjB,sBAAKH,UAAU,YAAYe,MAAO,CAACC,MAAoB,UAAbjB,EAAME,KAAe,QAAQ,SAAvE,UACI,oBAAID,UAAU,OAAd,qBACF,sBAAKA,UAAU,iBAAiBK,GAAG,mBAAmBU,MAAO,CAACS,OAAQ,oBAAqBuB,aAAc,OAAzG,UACE,sBAAK/C,UAAU,iBAAf,UAEE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBACEL,UAAU,6BACVI,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,QACd,gBAAc,cACdW,MAAO,CAACQ,gBAA8B,UAAbxB,EAAME,KAAe,UAAU,UAAWe,MAAoB,UAAbjB,EAAME,KAAe,UAAU,SAP3G,SASE,yDAIJ,qBACEI,GAAG,cACHL,UAAU,8BACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBe,MAAO,CAACQ,gBAA8B,UAAbxB,EAAME,KAAe,UAAU,UAAWe,MAAoB,UAAbjB,EAAME,KAAe,UAAU,SAAzI,4HAKJ,sBAAKD,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,aAApC,SACE,wBACEL,UAAU,mBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,OACd,gBAAc,cACdW,MAAO,CAACQ,gBAA8B,UAAbxB,EAAME,KAAe,UAAU,UAAWe,MAAoB,UAAbjB,EAAME,KAAe,UAAU,SAP3G,SASE,kDAGJ,qBACEI,GAAG,cACHL,UAAU,mCACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,qBAAKA,UAAU,iBAAiBe,MAAO,CAACQ,gBAA8B,UAAbxB,EAAME,KAAe,UAAU,UAAWe,MAAoB,UAAbjB,EAAME,KAAe,UAAU,SAAzI,SACE,+BACE,oBAAID,UAAU,OAAd,iDAGA,qEAGA,oBAAIA,UAAU,OAAd,iCAGA,yDAGA,oBAAIA,UAAU,OAAd,gDAGA,mFAGA,oBAAIA,UAAU,OAAd,+FAOR,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBK,GAAG,eAApC,SACE,wBACEL,UAAU,6BACVI,KAAK,SACL,iBAAe,WACf,iBAAe,iBACf,gBAAc,QACd,gBAAc,gBACdW,MAAO,CAACQ,gBAA8B,UAAbxB,EAAME,KAAe,UAAU,UAAWe,MAAoB,UAAbjB,EAAME,KAAe,UAAU,SAP3G,SASE,+DAGJ,qBACEI,GAAG,gBACHL,UAAU,8BACV,kBAAgB,eAChB,iBAAe,oBAJjB,SAME,sBAAKA,UAAU,iBAAiBe,MAAO,CAACQ,gBAA8B,UAAbxB,EAAME,KAAe,UAAU,UAAWe,MAAoB,UAAbjB,EAAME,KAAe,UAAU,SAAzI,kBACO,kDADP,iNC5FG+C,MAdf,SAAejD,GAKX,OACIA,EAAMkD,OAAS,sBAAKjD,UAAS,sBAAiBD,EAAMkD,MAAM7C,KAA7B,gCAAiEG,KAAK,QAApF,UACX,iCANW,SAAC2C,GAChB,IAAMC,EAAQD,EAAKrB,cACnB,OAAOsB,EAAMC,OAAO,GAAGxB,cAAgBuB,EAAME,MAAM,GAItCC,CAAWvD,EAAMkD,MAAM7C,QADrB,KACuCL,EAAMkD,MAAMR,IAC9D,wBAAQrC,KAAK,SAASJ,UAAU,YAAY,kBAAgB,QAAQ,aAAW,c,OCwD5EuD,MApDf,WACE,MAAwB3C,mBAAS,SAAjC,mBAAO4C,EAAP,KAAaC,EAAb,KACA,EAA0B7C,mBAAS,MAAnC,mBAAOqC,EAAP,KAAcS,EAAd,KACMhC,EAAY,SAACiC,EAASvD,GAC1BsD,EAAS,CACPjB,IAAKkB,EACLvD,KAAMA,IAERwD,YAAW,WACTF,EAAS,QACR,MAoBL,OAhBA1B,SAAS6B,KAAK9C,MAAM+C,WAAa,aAiB/B,mCACA,eAAC,IAAD,WACE,cAAChE,EAAD,CAAQK,MAAM,YAAYG,UAAU,QAAQL,KAAMuD,EAAM/C,WAjBzC,WACL,UAAT+C,GAEDC,EAAQ,QACRzB,SAAS6B,KAAK9C,MAAMQ,gBAAkB,UACtCG,EAAU,6BAA8B,aAIxC+B,EAAQ,SACRzB,SAAS6B,KAAK9C,MAAMQ,gBAAkB,UACtCG,EAAU,8BAA+B,eAOzC,cAAC,EAAD,CAAOuB,MAAOA,IACd,qBAAKjD,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,SAAlB,SACE,cAAClB,EAAD,CAAO7C,KAAMuD,MAEf,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,SACA,cAACrD,EAAD,CAAUe,UAAWA,EAAWT,QAAQ,6BAA6BhB,KAAMuD,iBC3CtES,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5C,SAASC,eAAe,SAM1BgC,M","file":"static/js/main.3d0e16f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`} >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //console.log(\"Uppercase was clicked\");\r\n    \r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else\r\n    { \r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n  };\r\n  const handleLoClick = () => {\r\n    //console.log(\"Uppercase was clicked\");\r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n  };\r\n  const handleOnChange = (event) => {\r\n    //console.log(\"Uppercase was clicked\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClear = ()=>{\r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else{\r\n    setText(\"\");\r\n    props.showAlert(\"Text cleared!\",\"success\");\r\n    }\r\n  }\r\n\r\n  const handleCopy = ()=>{\r\n    \r\n    var text = document.getElementById(\"myBox\");\r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else{\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n    }\r\n  }\r\n\r\n  const handleExtraSpace = ()=>{\r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed!\",\"success\");\r\n    }\r\n  }\r\n\r\n  const handleEncode64 = ()=>{\r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else\r\n    { \r\n      let newText = btoa(text);\r\n      setText(newText);\r\n      props.showAlert(\"Encoded to base64!\",\"success\");\r\n    }\r\n  }\r\n\r\n  \r\n  const handleDecode64 = ()=>{\r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else\r\n    {\r\n      try{\r\n        let newText = atob(text);\r\n      setText(newText);\r\n      props.showAlert(\"Base64 decoded!\",\"success\");\r\n      }\r\n      catch(e){\r\n        props.showAlert(\"Invalid String Entered!\",\"warning\");\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  const handleListen = ()=>{\r\n    // if(text.length===0)\r\n    // {\r\n    //   showAlert()\r\n    // }\r\n    if(text.length===0) props.showAlert(\"Enter something!\",\"warning\");\r\n    else{\r\n    var msg = new SpeechSynthesisUtterance(text);\r\n    window.speechSynthesis.speak(msg);\r\n    }\r\n  }\r\n\r\n  // const wordLen = (text)=>{\r\n  //   if(text.endsWith('')){\r\n  //     return (text.split('').length)-1;\r\n  //   }\r\n  //   else return text.split('').length;\r\n  // }\r\n\r\n\r\n//   let myStyle = {\r\n//     color: 'white',\r\n//     backgroundColor: '#1f2e2e'\r\n// }\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    \r\n    <>\r\n      <div className=\"container my-4\" style={{color: props.mode==='light'?'black':'white'}}>\r\n        <h1 >{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control my-3\"\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor: props.mode==='light'?'#D3E0E9':'#061124', color: props.mode==='light'?'#061124':'white', border: props.mode==='light'?'solid 2px #e71414':'solid 2px #e55d66'}}\r\n            \r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary \" onClick={handleExtraSpace}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClear}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleEncode64}>\r\n          Encode to Base64\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={handleDecode64}>\r\n          Decode Base64\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleListen}>\r\n          Listen\r\n        </button>\r\n        \r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p className=\"my-4\">{text.length>0?text:\"Enter something in the textbox above to preview it here!\"}</p>\r\n      </div>\r\n      \r\n      {/* <div className=\"container my-3\">\r\n        <button type=\"button\" class=\"btn btn-primary\">\r\n          Enable Dark Mode\r\n        </button>\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n    \r\n\r\n    //const [btnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n    document.title = \"TextUtils - About\"\r\n   \r\n   \r\n\r\n  return (\r\n    <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}} >\r\n        <h1 className=\"my-4\">About  </h1>\r\n      <div className=\"accordion my-5\" id=\"accordionExample\" style={{border: \"solid 3px #DF7D7D\", borderRadius: \"6px\"}}>\r\n        <div className=\"accordion-item\">\r\n        \r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={{backgroundColor: props.mode==='light'?'#d3e0e9':'#061124', color: props.mode==='light'?'#061124':'white'}}\r\n            >\r\n              <strong>About TextUtils</strong>\r\n              \r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={{backgroundColor: props.mode==='light'?'#d3e0e9':'#061124', color: props.mode==='light'?'#061124':'white'}}>\r\n            TextUtils is a utility which can make your day to day life by manipulating your text in the way you want.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={{backgroundColor: props.mode==='light'?'#d3e0e9':'#061124', color: props.mode==='light'?'#061124':'white'}}\r\n            >\r\n              <strong>Features</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={{backgroundColor: props.mode==='light'?'#d3e0e9':'#061124', color: props.mode==='light'?'#061124':'white'}}>\r\n              <ul>\r\n                <li className=\"my-2\">\r\n                  Change lowercase text to uppercase.\r\n                </li >\r\n                <li>\r\n                  Change lowercase text to uppercase.\r\n                </li>\r\n                <li className=\"my-2\">\r\n                  Remove Extra Space.\r\n                </li>\r\n                <li>\r\n                  Copy text to clipboard.\r\n                </li>\r\n                <li className=\"my-2\">\r\n                  Encode or decode text into Base64.\r\n                </li>\r\n                <li>\r\n                  Reading text is old fashion? Listen your content.\r\n                </li>\r\n                <li className=\"my-2\">\r\n                  Last but not the least, get count of words and characters of your text.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={{backgroundColor: props.mode==='light'?'#d3e0e9':'#061124', color: props.mode==='light'?'#061124':'white'}}\r\n            >\r\n              <strong>Browser Compatibility</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={{backgroundColor: props.mode==='light'?'#d3e0e9':'#061124', color: props.mode==='light'?'#061124':'white'}}>\r\n              This <strong>Text Utility</strong> software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n\n  document.body.style.fontFamily = 'Montserrat';\n\n  const toggleMode = ()=>{\n    if(Mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#061124';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor = '#d3e0e9';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\" aboutText=\"About\" mode={Mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={Mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter your text to analyze\" mode={Mode}/>\n          </Route>\n        </Switch>\n        \n       \n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}